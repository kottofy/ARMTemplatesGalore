{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "databricksWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Azure Databricks workspace to create."
            }
        },
        "databricksPricingTier": {
            "type": "string",
            "defaultValue": "standard",
            "allowedValues": [
                "standard",
                "premium"
            ],
            "metadata": {
                "description": "The pricing tier of the Azure Databricks workspace."
            }
        },
        "appinsightsName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Application Insights resource to create."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat(uniquestring('storage'), 'storage')]",
            "metadata": {
                "description": "The name of the Azure Storage Account to create."
            }
        },
        "storageAccountPricingTier": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The pricing tier of the Azure Storage Account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "appName": {
            "type": "string",
            "defaultValue": "[concat(uniquestring(resourceGroup().id), 'DedicatedApp')]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "description": "The pricing tier for the hosting plan."
            }
        },
        "workerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0",
            "metadata": {
                "description": "The instance size of the hosting plan (small, medium, or large)."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        }
    },
    "variables": {
        "managedResourceGroupName": "[concat('devdatabricks-rg-', parameters('databricksWorkspaceName'), '-', uniqueString(parameters('databricksWorkspaceName'), resourceGroup().id))]",
        "functionAppName": "[concat('devfuncjb', parameters('appName'))]",
        "hostingPlanName": "[concat('devhostplanjb', parameters('appName'))]",
        "storageAccountName": "[concat('devstoragejb', uniquestring(parameters('appName')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2014-06-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "sku": "[parameters('sku')]",
                "workerSize": "[parameters('workerSize')]",
                "hostingEnvironment": "",
                "numberOfWorkers": 1
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": true
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
                        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
                        "FUNCTIONS_EXTENSION_VERSION": "~1"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Databricks/workspaces",
            "name": "[parameters('databricksWorkspaceName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-04-01",
            "sku": {
                "name": "[parameters('databricksPricingTier')]"
            },
            "properties": {
                "ManagedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]"
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "name": "[parameters('appinsightsName')]",
            "apiVersion": "2014-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "Application_Type": "other"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(copyIndex(), parameters('storageAccountName'))]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountPricingTier')]"
            },
            "kind": "StorageV2",
            "properties": {},
            "copy": {
                "name": "storagecopy",
                "count": 4
            }
        }
    ],
    "outputs": {
        "databricksWorkspace": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricksWorkspaceName')))]"
        },
        "appinsights": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsightsName')))]"
        }
    }
}